/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  KubecaptainApiV1AppApp,
  KubecaptainApiV1AppListResponse,
} from '../models/index';
import {
    KubecaptainApiV1AppAppFromJSON,
    KubecaptainApiV1AppAppToJSON,
    KubecaptainApiV1AppListResponseFromJSON,
    KubecaptainApiV1AppListResponseToJSON,
} from '../models/index';

export interface AppServiceCreateRequest {
    kubecaptainApiV1AppApp: Omit<KubecaptainApiV1AppApp, 'createdAt'>;
}

export interface AppServiceDeleteRequest {
    name: string;
}

export interface AppServiceGetRequest {
    name: string;
}

export interface AppServiceUpdateRequest {
    appName: string;
    kubecaptainApiV1AppApp: Omit<KubecaptainApiV1AppApp, 'createdAt'>;
}

/**
 * 
 */
export class AppServiceApi extends runtime.BaseAPI {

    /**
     */
    async appServiceCreateRaw(requestParameters: AppServiceCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['kubecaptainApiV1AppApp'] == null) {
            throw new runtime.RequiredError(
                'kubecaptainApiV1AppApp',
                'Required parameter "kubecaptainApiV1AppApp" was null or undefined when calling appServiceCreate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/v1/app`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: KubecaptainApiV1AppAppToJSON(requestParameters['kubecaptainApiV1AppApp']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async appServiceCreate(requestParameters: AppServiceCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.appServiceCreateRaw(requestParameters, initOverrides);
    }

    /**
     */
    async appServiceDeleteRaw(requestParameters: AppServiceDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['name'] == null) {
            throw new runtime.RequiredError(
                'name',
                'Required parameter "name" was null or undefined when calling appServiceDelete().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/v1/app/{name}`;
        urlPath = urlPath.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters['name'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async appServiceDelete(requestParameters: AppServiceDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.appServiceDeleteRaw(requestParameters, initOverrides);
    }

    /**
     */
    async appServiceGetRaw(requestParameters: AppServiceGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<KubecaptainApiV1AppApp>> {
        if (requestParameters['name'] == null) {
            throw new runtime.RequiredError(
                'name',
                'Required parameter "name" was null or undefined when calling appServiceGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/v1/app/{name}`;
        urlPath = urlPath.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters['name'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => KubecaptainApiV1AppAppFromJSON(jsonValue));
    }

    /**
     */
    async appServiceGet(requestParameters: AppServiceGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<KubecaptainApiV1AppApp> {
        const response = await this.appServiceGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async appServiceListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<KubecaptainApiV1AppListResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/v1/app`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => KubecaptainApiV1AppListResponseFromJSON(jsonValue));
    }

    /**
     */
    async appServiceList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<KubecaptainApiV1AppListResponse> {
        const response = await this.appServiceListRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async appServiceUpdateRaw(requestParameters: AppServiceUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['appName'] == null) {
            throw new runtime.RequiredError(
                'appName',
                'Required parameter "appName" was null or undefined when calling appServiceUpdate().'
            );
        }

        if (requestParameters['kubecaptainApiV1AppApp'] == null) {
            throw new runtime.RequiredError(
                'kubecaptainApiV1AppApp',
                'Required parameter "kubecaptainApiV1AppApp" was null or undefined when calling appServiceUpdate().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/v1/app/{app.name}`;
        urlPath = urlPath.replace(`{${"app.name"}}`, encodeURIComponent(String(requestParameters['appName'])));

        const response = await this.request({
            path: urlPath,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: KubecaptainApiV1AppAppToJSON(requestParameters['kubecaptainApiV1AppApp']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async appServiceUpdate(requestParameters: AppServiceUpdateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.appServiceUpdateRaw(requestParameters, initOverrides);
    }

}
