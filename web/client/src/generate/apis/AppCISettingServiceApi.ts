/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  KubecaptainApiV1AppAppCISetting,
} from '../models/index';
import {
    KubecaptainApiV1AppAppCISettingFromJSON,
    KubecaptainApiV1AppAppCISettingToJSON,
} from '../models/index';

export interface AppCISettingServiceApplyRequest {
    name: string;
    kubecaptainApiV1AppAppCISetting: KubecaptainApiV1AppAppCISetting;
}

export interface AppCISettingServiceGetRequest {
    name: string;
}

/**
 * 
 */
export class AppCISettingServiceApi extends runtime.BaseAPI {

    /**
     */
    async appCISettingServiceApplyRaw(requestParameters: AppCISettingServiceApplyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['name'] == null) {
            throw new runtime.RequiredError(
                'name',
                'Required parameter "name" was null or undefined when calling appCISettingServiceApply().'
            );
        }

        if (requestParameters['kubecaptainApiV1AppAppCISetting'] == null) {
            throw new runtime.RequiredError(
                'kubecaptainApiV1AppAppCISetting',
                'Required parameter "kubecaptainApiV1AppAppCISetting" was null or undefined when calling appCISettingServiceApply().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';


        let urlPath = `/v1/app/{name}/ci`;
        urlPath = urlPath.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters['name'])));

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: KubecaptainApiV1AppAppCISettingToJSON(requestParameters['kubecaptainApiV1AppAppCISetting']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async appCISettingServiceApply(requestParameters: AppCISettingServiceApplyRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.appCISettingServiceApplyRaw(requestParameters, initOverrides);
    }

    /**
     */
    async appCISettingServiceGetRaw(requestParameters: AppCISettingServiceGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<KubecaptainApiV1AppAppCISetting>> {
        if (requestParameters['name'] == null) {
            throw new runtime.RequiredError(
                'name',
                'Required parameter "name" was null or undefined when calling appCISettingServiceGet().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};


        let urlPath = `/v1/app/{name}/ci`;
        urlPath = urlPath.replace(`{${"name"}}`, encodeURIComponent(String(requestParameters['name'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => KubecaptainApiV1AppAppCISettingFromJSON(jsonValue));
    }

    /**
     */
    async appCISettingServiceGet(requestParameters: AppCISettingServiceGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<KubecaptainApiV1AppAppCISetting> {
        const response = await this.appCISettingServiceGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
